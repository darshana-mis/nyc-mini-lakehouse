services:
  postgres:
    image: postgres:15
    container_name: pg
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpass
      POSTGRES_DB: nyc
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d nyc"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql

  airflow-init:
    image: apache/airflow:2.9.3
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://dbuser:dbpass@postgres:5432/nyc
      AIRFLOW__LOGGING__ALLOW_FALLBACK_TO_LOCAL_LOGS: "True"
      AIRFLOW__WEBSERVER__SECRET_KEY: "e563694d57a16a20b88c03405ac68eeb6b95bce6390328d13fdb21ab5ee18003"
      _PIP_ADDITIONAL_REQUIREMENTS: "psycopg2-binary dbt-core dbt-postgres pandas pyarrow requests"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./dbt:/opt/airflow/dbt
    entrypoint: ["/bin/bash", "-lc"]
    command: >
      "airflow db upgrade &&
       airflow users create --username admin --password admin --firstname Air --lastname Flow --role Admin --email admin@example.com || true"

  airflow-webserver:
    image: apache/airflow:2.9.3
    container_name: airflow-webserver
    hostname: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://dbuser:dbpass@postgres:5432/nyc
      AIRFLOW__LOGGING__ALLOW_FALLBACK_TO_LOCAL_LOGS: "True"
      AIRFLOW__WEBSERVER__SECRET_KEY: "e563694d57a16a20b88c03405ac68eeb6b95bce6390328d13fdb21ab5ee18003"
      AIRFLOW__CORE__HOSTNAME_CALLABLE: "socket:gethostname"
      _PIP_ADDITIONAL_REQUIREMENTS: "psycopg2-binary dbt-core dbt-postgres pandas pyarrow requests"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./dbt:/opt/airflow/dbt
    command: ["bash", "-lc", "airflow webserver"]
    ports:
      - "8081:8080"

  airflow-scheduler:
    image: apache/airflow:2.9.3
    container_name: airflow-scheduler
    hostname: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://dbuser:dbpass@postgres:5432/nyc
      AIRFLOW__LOGGING__ALLOW_FALLBACK_TO_LOCAL_LOGS: "True"
      AIRFLOW__WEBSERVER__SECRET_KEY: "e563694d57a16a20b88c03405ac68eeb6b95bce6390328d13fdb21ab5ee18003"
      AIRFLOW__CORE__HOSTNAME_CALLABLE: "socket:gethostname"
      _PIP_ADDITIONAL_REQUIREMENTS: "psycopg2-binary dbt-core dbt-postgres pandas pyarrow requests"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./dbt:/opt/airflow/dbt
    command: ["bash", "-lc", "airflow scheduler"]

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase.db

volumes:
  pgdata:
